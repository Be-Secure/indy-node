name: "Build Node Packages"

on:
  workflow_call:
    inputs:
      GITHUB_REPOSITORY_NAME:
        required: true
        type: string
      UBUNTU_VERSION:
        required: true
        type: string
      isDev:
        required: true
        type: string
      isRC:
        required: true
        type: string

jobs:
  build_release:
    name: Build Release
    runs-on: ubuntu-20.04
    env:
      UBUNTU_VERSION: ${{ inputs.UBUNTU_VERSION }}
    container:
      image: ghcr.io/${{ inputs.GITHUB_REPOSITORY_NAME }}/node-build:${{ inputs.UBUNTU_VERSION }}
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set Build Version
        id: version
        uses: ./.github/actions/set-version
        with:
          moduleName: indy_node
          isDev: ${{ inputs.isDev }}
          isRC: ${{ inputs.isRC }}

      - name: Build Deployment Package
        run: |
          mkdir -p /tmp/node-build
          ./build-scripts/${{ env.UBUNTU_VERSION }}/build-indy-node.sh "/__w/indy-node/indy-node" "${{ steps.version.outputs.upstreamVer }}" "/tmp/node-build" "${{ steps.version.outputs.pkgVer }}"

      - uses: actions/upload-artifact@v2
        with:
          name: node-deb
          path: /tmp/node-build
          retention-days: 5

  build_3rd_party_dependencies:
    name: Build 3rd Party Dependencies
    runs-on: ubuntu-20.04
    env:
      UBUNTU_VERSION: ${{ inputs.UBUNTU_VERSION }}
    container:
      image: ghcr.io/${{ inputs.GITHUB_REPOSITORY_NAME }}/node-build:${{ inputs.UBUNTU_VERSION }}
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Try load from cache.
        id: third-party-dependencies
        uses: actions/cache@v2
        with:
          path: /tmp/third-party-dependencies
          key: ${{ format('third-party-dependencies-{0}', hashFiles(format('./build-scripts/{0}/build-3rd-parties.sh', inputs.UBUNTU_VERSION ))) }}           

      - name: Build 3rd party deployment packages
        if: steps.third-party-dependencies.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./build-scripts/${{ env.UBUNTU_VERSION }}/cache/3rd-party-dependencies/
          ./build-scripts/${{ env.UBUNTU_VERSION }}/build-3rd-parties.sh ./cache/3rd-party-dependencies
          mv ./build-scripts/${{ env.UBUNTU_VERSION }}/cache/* /tmp/third-party-dependencies

  build-python-packages:
    name: Build Python Packages
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v1

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install required packages via pip
        run: |
          python3 -m pip install pytest-runner wheel

      - name: Set Build Version
        id: version
        uses: ./.github/actions/set-version
        with:
          moduleName: indy_node
          isDev: ${{ inputs.isDev }}
          isRC: ${{ inputs.isRC }}

      - name: Prepare package and set version
        run: |
          ./build-scripts/${{ inputs.UBUNTU_VERSION }}/prepare-package.sh . indy_node "${{ steps.version.outputs.upstreamVer }}" python-packages

      - name: Building python package
        run: |
          python3 setup.py sdist --dist-dir /tmp/dist bdist_wheel --dist-dir /tmp/dist

      - uses: actions/upload-artifact@v2
        with:
          name: node-python
          path: /tmp/dist
          retention-days: 5
